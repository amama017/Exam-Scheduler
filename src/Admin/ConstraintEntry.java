/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ConstraintEntry.java
 *
 * Created on Nov 12, 2011, 8:30:25 PM
 */

package Admin;

/**
 *
 * @author Ayman
 */
public class ConstraintEntry extends javax.swing.JDialog {

    /** Creates new form ConstraintEntry */
    public ConstraintEntry(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TimeTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Semster = new javax.swing.JComboBox();
        Code = new javax.swing.JTextField();
        SaveButton = new javax.swing.JButton();
        BackButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane1.setName("jScrollPane1"); // NOI18N

        TimeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Sunday", new Boolean(false), null, null, "", null, null, null, null, null},
                {"Monday", null, null, null, "", null, null, null, null, null},
                {"Tuesday", null, null, null, "", null, null, null, null, null},
                {"Wednesady", null, null, null, "", null, null, null, null, null},
                {"Thurasday", null, null, null, "", null, null, null, null, null}
            },
            new String [] {
                "Days", "08:30 to 09:30", "09:45 to 10:45", "11:00 to 12:00", "Break", "13:00 to 14:00", "14:15 to 15:15", "15:30 to 16:30", "16:45 to 17:45", "18:00 to 19:00"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, false, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TimeTable.setName("TimeTable"); // NOI18N
        TimeTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(TimeTable);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(algorithm.AlgorithmApp.class).getContext().getResourceMap(ConstraintEntry.class);
        TimeTable.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("TimeTable.columnModel.title0")); // NOI18N
        TimeTable.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("TimeTable.columnModel.title1")); // NOI18N
        TimeTable.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("TimeTable.columnModel.title2")); // NOI18N
        TimeTable.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("TimeTable.columnModel.title3")); // NOI18N
        TimeTable.getColumnModel().getColumn(4).setHeaderValue(resourceMap.getString("TimeTable.columnModel.title4")); // NOI18N
        TimeTable.getColumnModel().getColumn(5).setHeaderValue(resourceMap.getString("TimeTable.columnModel.title5")); // NOI18N
        TimeTable.getColumnModel().getColumn(6).setHeaderValue(resourceMap.getString("TimeTable.columnModel.title6")); // NOI18N
        TimeTable.getColumnModel().getColumn(7).setHeaderValue(resourceMap.getString("TimeTable.columnModel.title7")); // NOI18N
        TimeTable.getColumnModel().getColumn(8).setHeaderValue(resourceMap.getString("TimeTable.columnModel.title8")); // NOI18N
        TimeTable.getColumnModel().getColumn(9).setHeaderValue(resourceMap.getString("TimeTable.columnModel.title9")); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        Semster.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2" }));
        Semster.setName("Semster"); // NOI18N

        Code.setText(resourceMap.getString("Code.text")); // NOI18N
        Code.setEnabled(false);
        Code.setName("Code"); // NOI18N

        SaveButton.setText(resourceMap.getString("SaveButton.text")); // NOI18N
        SaveButton.setName("SaveButton"); // NOI18N

        BackButton.setText(resourceMap.getString("BackButton.text")); // NOI18N
        BackButton.setName("BackButton"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 822, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Semster, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Code, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE))
                        .addGap(92, 92, 92)
                        .addComponent(SaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(Code, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(Semster, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BackButton)
                            .addComponent(SaveButton))))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ConstraintEntry dialog = new ConstraintEntry(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JTextField Code;
    private javax.swing.JButton SaveButton;
    private javax.swing.JComboBox Semster;
    private javax.swing.JTable TimeTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
