package Student;

import java.awt.Color;
import javax.swing.JComboBox;

public class StudentData extends javax.swing.JDialog {

    /** Creates new form StudentData */
    public StudentData(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        PassCheck = false;
        NameCheck = false;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        CPassword = new javax.swing.JPasswordField();
        Password = new javax.swing.JPasswordField();
        UserName = new javax.swing.JTextField();
        FName = new javax.swing.JTextField();
        LName = new javax.swing.JTextField();
        CheckPassword = new javax.swing.JTextField();
        CheckUserName = new javax.swing.JTextField();
        Advisor = new javax.swing.JComboBox();
        Valid = new javax.swing.JButton();
        CancelButton = new javax.swing.JButton();
        SaveButton = new javax.swing.JButton();
        ChangePass = new javax.swing.JButton();
        ChangeName = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N
        setResizable(false);

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(algorithm.AlgorithmApp.class).getContext().getResourceMap(StudentData.class);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        CPassword.setEditable(false);
        CPassword.setText(resourceMap.getString("CPassword.text")); // NOI18N
        CPassword.setName("CPassword"); // NOI18N
        CPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                CPasswordFocusLost(evt);
            }
        });

        Password.setEditable(false);
        Password.setText(resourceMap.getString("Password.text")); // NOI18N
        Password.setName("Password"); // NOI18N

        UserName.setEditable(false);
        UserName.setText(resourceMap.getString("UserName.text")); // NOI18N
        UserName.setName("UserName"); // NOI18N

        FName.setText(resourceMap.getString("FName.text")); // NOI18N
        FName.setName("FName"); // NOI18N

        LName.setText(resourceMap.getString("LName.text")); // NOI18N
        LName.setName("LName"); // NOI18N

        CheckPassword.setEditable(false);
        CheckPassword.setBorder(null);
        CheckPassword.setName("CheckPassword"); // NOI18N

        CheckUserName.setEditable(false);
        CheckUserName.setText(resourceMap.getString("CheckUserName.text")); // NOI18N
        CheckUserName.setBorder(null);
        CheckUserName.setName("CheckUserName"); // NOI18N

        Advisor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        Advisor.setName("Advisor"); // NOI18N

        Valid.setText(resourceMap.getString("Valid.text")); // NOI18N
        Valid.setEnabled(false);
        Valid.setName("Valid"); // NOI18N
        Valid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ValidActionPerformed(evt);
            }
        });

        CancelButton.setText(resourceMap.getString("CancelButton.text")); // NOI18N
        CancelButton.setName("CancelButton"); // NOI18N
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        SaveButton.setText(resourceMap.getString("SaveButton.text")); // NOI18N
        SaveButton.setName("SaveButton"); // NOI18N
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        ChangePass.setText(resourceMap.getString("ChangePass.text")); // NOI18N
        ChangePass.setName("ChangePass"); // NOI18N
        ChangePass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangePassActionPerformed(evt);
            }
        });

        ChangeName.setText(resourceMap.getString("ChangeName.text")); // NOI18N
        ChangeName.setName("ChangeName"); // NOI18N
        ChangeName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangeNameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Advisor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LName)
                    .addComponent(Password)
                    .addComponent(CPassword)
                    .addComponent(UserName)
                    .addComponent(FName))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(ChangeName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ChangePass, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(SaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(Valid)
                                .addComponent(CheckUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(CancelButton)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(CheckPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(UserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChangeName)
                    .addComponent(Valid))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChangePass)
                    .addComponent(CheckUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(CPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CheckPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(FName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(LName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(Advisor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SaveButton)
                    .addComponent(CancelButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // <editor-fold defaultstate="collapsed" desc="GUI Managers">
    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
        MainApp.ShowViewFrame();
    }//GEN-LAST:event_CancelButtonActionPerformed

    private void ValidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ValidActionPerformed
        CheckValidation();
    }//GEN-LAST:event_ValidActionPerformed

    private void CPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CPasswordFocusLost
        CheckPassword();
    }//GEN-LAST:event_CPasswordFocusLost

    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
        if(NameCheck && PassCheck)
        {
            if(CheckValidation() && CheckPassword())
            {
                //add to DB
                MainApp.Alter(UserName.getText(),Password.getText(),FName.getText(),LName.getText(),(Advisor.getSelectedIndex()+1));
                //update the fields in the View before closing
                MainApp.InitializeView(MainApp.GetSView());
                //Hide Dialog
                MainApp.ShowViewFrame();
            }
        }
        else if(NameCheck)
        {
            if(CheckValidation())
            {
                //add to DB
                MainApp.Alter(UserName.getText(),Password.getText(),FName.getText(),LName.getText(),(Advisor.getSelectedIndex()+1));
                //update the fields in the View before closing
                MainApp.InitializeView(MainApp.GetSView());
                //Hide Dialog
                MainApp.ShowViewFrame();
            }
        }
        else
        {
            if(CheckPassword())
            {
                //add to DB
                MainApp.Alter(UserName.getText(),Password.getText(),FName.getText(),LName.getText(),(Advisor.getSelectedIndex()+1));
                //update the fields in the View before closing
                MainApp.InitializeView(MainApp.GetSView());
                //Hide Dialog
                MainApp.ShowViewFrame();
            }
        }
    }//GEN-LAST:event_SaveButtonActionPerformed

    private void ChangePassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangePassActionPerformed
        //Change the Password in the database
        Password.setEditable(true);
        CPassword.setEditable(true);
        PassCheck = true;

    }//GEN-LAST:event_ChangePassActionPerformed

    private void ChangeNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangeNameActionPerformed
        //Change the User Name in the DB
        UserName.setEditable(true);
        Valid.setEnabled(true);
        NameCheck = true;
    }//GEN-LAST:event_ChangeNameActionPerformed
    //</editor-fold>
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox Advisor;
    private javax.swing.JPasswordField CPassword;
    private javax.swing.JButton CancelButton;
    private javax.swing.JButton ChangeName;
    private javax.swing.JButton ChangePass;
    private javax.swing.JTextField CheckPassword;
    private javax.swing.JTextField CheckUserName;
    private javax.swing.JTextField FName;
    private javax.swing.JTextField LName;
    private javax.swing.JPasswordField Password;
    private javax.swing.JButton SaveButton;
    private javax.swing.JTextField UserName;
    private javax.swing.JButton Valid;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    // End of variables declaration//GEN-END:variables

    // <editor-fold defaultstate="collapsed" desc="Set of Variables used by the Class">
    private StudentApp MainApp;
    private boolean valid;
    private boolean PassCheck;
    private boolean NameCheck;// </editor-fold>

    // <editor-fold defaultstate="collapsed" desc="Manager Commands">
    void SetManager(StudentApp aThis) {
        MainApp = aThis;
    }

    //Check Confirmation
    private boolean CheckPassword(){
        //Check Password Confirmation
        if(CPassword.getText().equals(Password.getText()))
        {
            CheckPassword.setForeground(Color.green);
            CheckPassword.setText("Match");
            return true;
        }
        else
        {
            CheckPassword.setForeground(Color.red);
            CheckPassword.setText("Not Match");
            return false;
        }
    }

    //Check Validation
    private boolean CheckValidation(){
        //Check UserName Validation
        valid = MainApp.CheckValidation(UserName.getText());
        if(valid)
        {
            CheckUserName.setForeground(Color.green);
            CheckUserName.setText("Vaild");
        }
        else
        {
            CheckUserName.setForeground(Color.red);
            CheckUserName.setText("Not Valid");
        }
        return valid;
    }// </editor-fold>

    // <editor-fold defaultstate="collapsed" desc="Setters for the TextBoxes & Table">
    public JComboBox getAdvisorField(){
        return Advisor;
    }

    void SetFName(String FName) {
        this.FName.setText(FName);
    }

    void SetLName(String LName) {
        this.LName.setText(LName);
    }

    void SetAdvisor(int Advisor) {
        this.Advisor.setSelectedIndex(Advisor);
    }

    void SetUser(String User) {
        UserName.setText(User);
    }

    void SetPW(String PW) {
        Password.setText(PW);
        CPassword.setText(PW);
    }// </editor-fold>

}
