package Student;

import DataBase.Connection_MySQL;
import algorithm.AlgorithmApp;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;

public class StudentView extends javax.swing.JFrame {

    /** Creates new form StudentView */
    public StudentView(Connection_MySQL Conn, AlgorithmApp app, boolean modal, int ID) {
        MainApp = app;
        Manager = new StudentApp(Conn,ID);
        initComponents();
        InitializeView();
        this.ID.setText(Integer.toString(ID));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        ID = new javax.swing.JTextField();
        FName = new javax.swing.JTextField();
        Year = new javax.swing.JTextField();
        Advisor = new javax.swing.JTextField();
        LName = new javax.swing.JTextField();
        Semester = new javax.swing.JTextField();
        Credit = new javax.swing.JTextField();
        ExitButton = new javax.swing.JButton();
        SaveButton = new javax.swing.JButton();
        EditButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        CourseTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("Form"); // NOI18N
        setResizable(false);

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(algorithm.AlgorithmApp.class).getContext().getResourceMap(StudentView.class);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        ID.setText(resourceMap.getString("ID.text")); // NOI18N
        ID.setEnabled(false);
        ID.setName("ID"); // NOI18N

        FName.setText(resourceMap.getString("FName.text")); // NOI18N
        FName.setEnabled(false);
        FName.setName("FName"); // NOI18N

        Year.setText(resourceMap.getString("Year.text")); // NOI18N
        Year.setEnabled(false);
        Year.setName("Year"); // NOI18N

        Advisor.setText(resourceMap.getString("Advisor.text")); // NOI18N
        Advisor.setEnabled(false);
        Advisor.setName("Advisor"); // NOI18N

        LName.setText(resourceMap.getString("LName.text")); // NOI18N
        LName.setEnabled(false);
        LName.setName("LName"); // NOI18N

        Semester.setText(resourceMap.getString("Semester.text")); // NOI18N
        Semester.setEnabled(false);
        Semester.setName("Semester"); // NOI18N

        Credit.setText(resourceMap.getString("Credit.text")); // NOI18N
        Credit.setEnabled(false);
        Credit.setName("Credit"); // NOI18N

        ExitButton.setText(resourceMap.getString("ExitButton.text")); // NOI18N
        ExitButton.setName("ExitButton"); // NOI18N
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });

        SaveButton.setText(resourceMap.getString("SaveButton.text")); // NOI18N
        SaveButton.setEnabled(false);
        SaveButton.setName("SaveButton"); // NOI18N
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        EditButton.setText(resourceMap.getString("EditButton.text")); // NOI18N
        EditButton.setName("EditButton"); // NOI18N
        EditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditButtonActionPerformed(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        CourseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Code", "Course Name", "Credit"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.Short.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        CourseTable.setName("CourseTable"); // NOI18N
        CourseTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(CourseTable);
        CourseTable.getColumnModel().getColumn(0).setMinWidth(25);
        CourseTable.getColumnModel().getColumn(0).setMaxWidth(25);
        CourseTable.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("CourseTable.columnModel.title0")); // NOI18N
        CourseTable.getColumnModel().getColumn(1).setMinWidth(100);
        CourseTable.getColumnModel().getColumn(1).setMaxWidth(100);
        CourseTable.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("CourseTable.columnModel.title1")); // NOI18N
        CourseTable.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("jTable1.columnModel.title3")); // NOI18N
        CourseTable.getColumnModel().getColumn(3).setMinWidth(50);
        CourseTable.getColumnModel().getColumn(3).setMaxWidth(50);
        CourseTable.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("jTable1.columnModel.title2")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ID))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Year)
                                    .addComponent(FName, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                                    .addComponent(Advisor))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Semester)
                            .addComponent(LName, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(10, 10, 10)
                        .addComponent(Credit, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(EditButton)
                        .addGap(18, 18, 18)
                        .addComponent(SaveButton)
                        .addGap(18, 18, 18)
                        .addComponent(ExitButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(FName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6)
                            .addComponent(Year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(Advisor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(Semester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ExitButton)
                        .addComponent(SaveButton)
                        .addComponent(EditButton))
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Credit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // <editor-fold defaultstate="collapsed" desc="GUI Managers">
    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ExitButtonActionPerformed

    private void EditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditButtonActionPerformed
        MainApp.RunDialog(3);
        Manager.ShowDataFrame();
    }//GEN-LAST:event_EditButtonActionPerformed

    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
        SaveCourseChange();
        SaveButton.setEnabled(false);
    }//GEN-LAST:event_SaveButtonActionPerformed
    // </editor-fold>

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Advisor;
    private javax.swing.JTable CourseTable;
    private javax.swing.JTextField Credit;
    private javax.swing.JButton EditButton;
    private javax.swing.JButton ExitButton;
    private javax.swing.JTextField FName;
    private javax.swing.JTextField ID;
    private javax.swing.JTextField LName;
    private javax.swing.JButton SaveButton;
    private javax.swing.JTextField Semester;
    private javax.swing.JTextField Year;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    //Initialize Set of TextBoxes & Table
    private void InitializeView(){
        //set the default parameters in the View
        Manager.InitializeView(this);
        System.out.println("Setting Course Table");
        //set the courses found in the course table
        Manager.SetCourseTable(this);
        //add a listener to the Course table to sense any change in the data.
        TableListener = new TableModelListener() {

            public void tableChanged(TableModelEvent e) {
                SaveButton.setEnabled(true);
            };
        };
        //add the listener to the table
        CourseTable.getModel().addTableModelListener(TableListener);
    }

    // <editor-fold defaultstate="collapsed" desc="Setters for the TextBoxes & Table">
    public void SetFName(String Name){
        FName.setText(Name);
    }
    public void SetLName(String Name){
        LName.setText(Name);
    }
    public void SetYear(String Y){
        Year.setText(Y);
    }
    public void SetSemester(String s){
        Semester.setText(s);
    }
    public void SetAdvisor(String ad){
        Advisor.setText(ad);
    }
    public void SetCredit(String C){
        Credit.setText(C);
    }
    
    public void AddRow(String m_Code, String m_CourseName, String m_Credit){
        DefaultTableModel model;
        model = (DefaultTableModel) CourseTable.getModel();
        //Returns a model to control the set of rows & columns in the Table
        if(TableCreationCounter <= model.getRowCount())
            model.insertRow(TableCreationCounter++, new Object[]{false,m_Code,m_CourseName,m_Credit});
    }
    
    public void editcourse(boolean State,int row){
        //Set the check box of the row_index row by the State
        DefaultTableModel model;
        model = (DefaultTableModel) CourseTable.getModel();
        //Returns a model to control the set of rows & columns in the Table
        if(row <= model.getRowCount())
            model.setValueAt(State, row, 0);
    }

    public void setDialog(StudentData D) {
        Manager.SetDataFrame(D);
    }
    // </editor-fold>

    // <editor-fold defaultstate="collapsed" desc="Set of Variables used by the Class">
    private AlgorithmApp MainApp;
    private StudentApp Manager;
    //a refrence to the Student View Manager.
    private static int TableCreationCounter = 0;
    private static TableModelListener TableListener;

    private void SaveCourseChange() {
        Manager.SaveCourseChange(CourseTable);
    }
    //a static variable that counts number of courses to create rows.
    // </editor-fold>

}
